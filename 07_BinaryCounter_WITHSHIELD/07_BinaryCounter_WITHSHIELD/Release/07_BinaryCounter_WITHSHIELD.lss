
07_BinaryCounter_WITHSHIELD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000196  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000122  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  00000196  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000196  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001c8  2**2
                  CONTENTS, READONLY
  5 .debug_info   000005f4  00000000  00000000  00000208  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005a2  00000000  00000000  000007fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000134  00000000  00000000  00000d9e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000208  00000000  00000000  00000ed2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 76 00 	call	0xec	; 0xec <main>
  88:	0c 94 8f 00 	jmp	0x11e	; 0x11e <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <init>:
  90:	84 b1       	in	r24, 0x04	; 4
  92:	8e 61       	ori	r24, 0x1E	; 30
  94:	84 b9       	out	0x04, r24	; 4
  96:	29 9a       	sbi	0x05, 1	; 5
  98:	51 98       	cbi	0x0a, 1	; 10
  9a:	59 9a       	sbi	0x0b, 1	; 11
  9c:	08 95       	ret

0000009e <displayBinaryCount>:
  9e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  a6:	21 e0       	ldi	r18, 0x01	; 1
  a8:	30 e0       	ldi	r19, 0x00	; 0
  aa:	e1 e0       	ldi	r30, 0x01	; 1
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	18 16       	cp	r1, r24
  b0:	19 06       	cpc	r1, r25
  b2:	dc f4       	brge	.+54     	; 0xea <displayBinaryCount+0x4c>
  b4:	80 ff       	sbrs	r24, 0
  b6:	09 c0       	rjmp	.+18     	; 0xca <displayBinaryCount+0x2c>
  b8:	68 b1       	in	r22, 0x08	; 8
  ba:	af 01       	movw	r20, r30
  bc:	02 2e       	mov	r0, r18
  be:	01 c0       	rjmp	.+2      	; 0xc2 <displayBinaryCount+0x24>
  c0:	44 0f       	add	r20, r20
  c2:	0a 94       	dec	r0
  c4:	ea f7       	brpl	.-6      	; 0xc0 <displayBinaryCount+0x22>
  c6:	46 2b       	or	r20, r22
  c8:	0a c0       	rjmp	.+20     	; 0xde <displayBinaryCount+0x40>
  ca:	58 b1       	in	r21, 0x08	; 8
  cc:	bf 01       	movw	r22, r30
  ce:	02 2e       	mov	r0, r18
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <displayBinaryCount+0x36>
  d2:	66 0f       	add	r22, r22
  d4:	0a 94       	dec	r0
  d6:	ea f7       	brpl	.-6      	; 0xd2 <displayBinaryCount+0x34>
  d8:	46 2f       	mov	r20, r22
  da:	40 95       	com	r20
  dc:	45 23       	and	r20, r21
  de:	48 b9       	out	0x08, r20	; 8
  e0:	95 95       	asr	r25
  e2:	87 95       	ror	r24
  e4:	2f 5f       	subi	r18, 0xFF	; 255
  e6:	3f 4f       	sbci	r19, 0xFF	; 255
  e8:	e2 cf       	rjmp	.-60     	; 0xae <displayBinaryCount+0x10>
  ea:	08 95       	ret

000000ec <main>:
  ec:	0e 94 48 00 	call	0x90	; 0x90 <init>
  f0:	49 9b       	sbis	0x09, 1	; 9
  f2:	0e c0       	rjmp	.+28     	; 0x110 <main+0x24>
  f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  f8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  fc:	01 96       	adiw	r24, 0x01	; 1
  fe:	8f 70       	andi	r24, 0x0F	; 15
 100:	99 27       	eor	r25, r25
 102:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 106:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 10a:	0e 94 4f 00 	call	0x9e	; 0x9e <displayBinaryCount>
 10e:	f0 cf       	rjmp	.-32     	; 0xf0 <main+0x4>
 110:	19 9b       	sbis	0x03, 1	; 3
 112:	ee cf       	rjmp	.-36     	; 0xf0 <main+0x4>
 114:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 118:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 11c:	e9 cf       	rjmp	.-46     	; 0xf0 <main+0x4>

0000011e <_exit>:
 11e:	f8 94       	cli

00000120 <__stop_program>:
 120:	ff cf       	rjmp	.-2      	; 0x120 <__stop_program>
